//-----------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated.
//
//   For more information, see: http://go.microsoft.com/fwlink/?LinkID=623246
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace org { namespace allseen { namespace LSF { namespace ControllerService { namespace Lamp {

public interface class ILampService
{
public:
    // Implement this function to handle calls to the GetAllLampIDs method.
    Windows::Foundation::IAsyncOperation<LampGetAllLampIDsResult^>^ GetAllLampIDsAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info );

    // Implement this function to handle calls to the GetLampSupportedLanguages method.
    Windows::Foundation::IAsyncOperation<LampGetLampSupportedLanguagesResult^>^ GetLampSupportedLanguagesAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID);

    // Implement this function to handle calls to the GetLampManufacturer method.
    Windows::Foundation::IAsyncOperation<LampGetLampManufacturerResult^>^ GetLampManufacturerAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID, _In_ Platform::String^ interfaceMemberLanguage);

    // Implement this function to handle calls to the GetLampName method.
    Windows::Foundation::IAsyncOperation<LampGetLampNameResult^>^ GetLampNameAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID, _In_ Platform::String^ interfaceMemberLanguage);

    // Implement this function to handle calls to the SetLampName method.
    Windows::Foundation::IAsyncOperation<LampSetLampNameResult^>^ SetLampNameAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID, _In_ Platform::String^ interfaceMemberLampName, _In_ Platform::String^ interfaceMemberLanguage);

    // Implement this function to handle calls to the GetLampDetails method.
    Windows::Foundation::IAsyncOperation<LampGetLampDetailsResult^>^ GetLampDetailsAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID);

    // Implement this function to handle calls to the GetLampParameters method.
    Windows::Foundation::IAsyncOperation<LampGetLampParametersResult^>^ GetLampParametersAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID);

    // Implement this function to handle calls to the GetLampParametersField method.
    Windows::Foundation::IAsyncOperation<LampGetLampParametersFieldResult^>^ GetLampParametersFieldAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID, _In_ Platform::String^ interfaceMemberLampParameterFieldName);

    // Implement this function to handle calls to the GetLampState method.
    Windows::Foundation::IAsyncOperation<LampGetLampStateResult^>^ GetLampStateAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID);

    // Implement this function to handle calls to the GetLampStateField method.
    Windows::Foundation::IAsyncOperation<LampGetLampStateFieldResult^>^ GetLampStateFieldAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID, _In_ Platform::String^ interfaceMemberLampStateFieldName);

    // Implement this function to handle calls to the TransitionLampState method.
    Windows::Foundation::IAsyncOperation<LampTransitionLampStateResult^>^ TransitionLampStateAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID, _In_ Windows::Foundation::Collections::IMapView<Platform::String^,Platform::Object^>^ interfaceMemberLampState, _In_ uint32 interfaceMemberTransitionPeriod);

    // Implement this function to handle calls to the PulseLampWithState method.
    Windows::Foundation::IAsyncOperation<LampPulseLampWithStateResult^>^ PulseLampWithStateAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID, _In_ Windows::Foundation::Collections::IMapView<Platform::String^,Platform::Object^>^ interfaceMemberFromLampState, _In_ Windows::Foundation::Collections::IMapView<Platform::String^,Platform::Object^>^ interfaceMemberToLampState, _In_ uint32 interfaceMemberPeriod, _In_ uint32 interfaceMemberDuration, _In_ uint32 interfaceMemberNumPulses);

    // Implement this function to handle calls to the PulseLampWithPreset method.
    Windows::Foundation::IAsyncOperation<LampPulseLampWithPresetResult^>^ PulseLampWithPresetAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID, _In_ Platform::String^ interfaceMemberFromPresetID, _In_ Platform::String^ interfaceMemberToPresetID, _In_ uint32 interfaceMemberPeriod, _In_ uint32 interfaceMemberDuration, _In_ uint32 interfaceMemberNumPulses);

    // Implement this function to handle calls to the TransitionLampStateToPreset method.
    Windows::Foundation::IAsyncOperation<LampTransitionLampStateToPresetResult^>^ TransitionLampStateToPresetAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID, _In_ Platform::String^ interfaceMemberPresetID, _In_ uint32 interfaceMemberTransitionPeriod);

    // Implement this function to handle calls to the TransitionLampStateField method.
    Windows::Foundation::IAsyncOperation<LampTransitionLampStateFieldResult^>^ TransitionLampStateFieldAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID, _In_ Platform::String^ interfaceMemberLampStateFieldName, _In_ Platform::Object^ interfaceMemberLampStateFieldValue, _In_ uint32 interfaceMemberTransitionPeriod);

    // Implement this function to handle calls to the ResetLampState method.
    Windows::Foundation::IAsyncOperation<LampResetLampStateResult^>^ ResetLampStateAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID);

    // Implement this function to handle calls to the ResetLampStateField method.
    Windows::Foundation::IAsyncOperation<LampResetLampStateFieldResult^>^ ResetLampStateFieldAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID, _In_ Platform::String^ interfaceMemberLampStateFieldName);

    // Implement this function to handle calls to the GetLampFaults method.
    Windows::Foundation::IAsyncOperation<LampGetLampFaultsResult^>^ GetLampFaultsAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID);

    // Implement this function to handle calls to the ClearLampFault method.
    Windows::Foundation::IAsyncOperation<LampClearLampFaultResult^>^ ClearLampFaultAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID, _In_ uint32 interfaceMemberLampFault);

    // Implement this function to handle calls to the GetLampServiceVersion method.
    Windows::Foundation::IAsyncOperation<LampGetLampServiceVersionResult^>^ GetLampServiceVersionAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info , _In_ Platform::String^ interfaceMemberLampID);

    // Implement this function to handle requests for the value of the Version property.
    //
    // Currently, info will always be null, because no information is available about the requestor.
    Windows::Foundation::IAsyncOperation<LampGetVersionResult^>^ GetVersionAsync(Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);

};

} } } } } 
