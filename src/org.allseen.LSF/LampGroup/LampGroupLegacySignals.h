//-----------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated.
//
//   For more information, see: http://go.microsoft.com/fwlink/?LinkID=623246
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace org { namespace allseen { namespace LSF { namespace ControllerService { namespace LampGroup {

ref class LampGroupLegacySignals;

public interface class ILampGroupLegacySignals
{
    event Windows::Foundation::TypedEventHandler<LampGroupLegacySignals^, LampGroupLampGroupsNameChangedReceivedEventArgs^>^ LampGroupsNameChangedReceived;
    event Windows::Foundation::TypedEventHandler<LampGroupLegacySignals^, LampGroupLampGroupsCreatedReceivedEventArgs^>^ LampGroupsCreatedReceived;
    event Windows::Foundation::TypedEventHandler<LampGroupLegacySignals^, LampGroupLampGroupsUpdatedReceivedEventArgs^>^ LampGroupsUpdatedReceived;
    event Windows::Foundation::TypedEventHandler<LampGroupLegacySignals^, LampGroupLampGroupsDeletedReceivedEventArgs^>^ LampGroupsDeletedReceived;
};

public ref class LampGroupLegacySignals sealed : [Windows::Foundation::Metadata::Default] ILampGroupLegacySignals
{
public:
    // Calling this method will send the LampGroupsNameChanged signal to every member of the session.
    void LampGroupsNameChanged(_In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberLampGroupsIDs);

    // This event fires whenever the LampGroupsNameChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<LampGroupLegacySignals^, LampGroupLampGroupsNameChangedReceivedEventArgs^>^ LampGroupsNameChangedReceived 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<LampGroupLegacySignals^, LampGroupLampGroupsNameChangedReceivedEventArgs^>^ handler) 
        { 
            return _LampGroupsNameChangedReceived += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<LampGroupLegacySignals^>(sender), safe_cast<LampGroupLampGroupsNameChangedReceivedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _LampGroupsNameChangedReceived -= token; 
        } 
    internal: 
        void raise(LampGroupLegacySignals^ sender, LampGroupLampGroupsNameChangedReceivedEventArgs^ args) 
        { 
            _LampGroupsNameChangedReceived(sender, args);
        } 
    }

    // Calling this method will send the LampGroupsCreated signal to every member of the session.
    void LampGroupsCreated(_In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberLampGroupsIDs);

    // This event fires whenever the LampGroupsCreated signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<LampGroupLegacySignals^, LampGroupLampGroupsCreatedReceivedEventArgs^>^ LampGroupsCreatedReceived 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<LampGroupLegacySignals^, LampGroupLampGroupsCreatedReceivedEventArgs^>^ handler) 
        { 
            return _LampGroupsCreatedReceived += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<LampGroupLegacySignals^>(sender), safe_cast<LampGroupLampGroupsCreatedReceivedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _LampGroupsCreatedReceived -= token; 
        } 
    internal: 
        void raise(LampGroupLegacySignals^ sender, LampGroupLampGroupsCreatedReceivedEventArgs^ args) 
        { 
            _LampGroupsCreatedReceived(sender, args);
        } 
    }

    // Calling this method will send the LampGroupsUpdated signal to every member of the session.
    void LampGroupsUpdated(_In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberLampGroupsIDs);

    // This event fires whenever the LampGroupsUpdated signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<LampGroupLegacySignals^, LampGroupLampGroupsUpdatedReceivedEventArgs^>^ LampGroupsUpdatedReceived 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<LampGroupLegacySignals^, LampGroupLampGroupsUpdatedReceivedEventArgs^>^ handler) 
        { 
            return _LampGroupsUpdatedReceived += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<LampGroupLegacySignals^>(sender), safe_cast<LampGroupLampGroupsUpdatedReceivedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _LampGroupsUpdatedReceived -= token; 
        } 
    internal: 
        void raise(LampGroupLegacySignals^ sender, LampGroupLampGroupsUpdatedReceivedEventArgs^ args) 
        { 
            _LampGroupsUpdatedReceived(sender, args);
        } 
    }

    // Calling this method will send the LampGroupsDeleted signal to every member of the session.
    void LampGroupsDeleted(_In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberLampGroupsIDs);

    // This event fires whenever the LampGroupsDeleted signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<LampGroupLegacySignals^, LampGroupLampGroupsDeletedReceivedEventArgs^>^ LampGroupsDeletedReceived 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<LampGroupLegacySignals^, LampGroupLampGroupsDeletedReceivedEventArgs^>^ handler) 
        { 
            return _LampGroupsDeletedReceived += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<LampGroupLegacySignals^>(sender), safe_cast<LampGroupLampGroupsDeletedReceivedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _LampGroupsDeletedReceived -= token; 
        } 
    internal: 
        void raise(LampGroupLegacySignals^ sender, LampGroupLampGroupsDeletedReceivedEventArgs^ args) 
        { 
            _LampGroupsDeletedReceived(sender, args);
        } 
    }

internal:
    void Initialize(_In_ alljoyn_busobject busObject, _In_ alljoyn_sessionid sessionId);
    void CallLampGroupsNameChangedReceived(_In_ LampGroupLegacySignals^ sender, _In_ LampGroupLampGroupsNameChangedReceivedEventArgs^ args);
    void CallLampGroupsCreatedReceived(_In_ LampGroupLegacySignals^ sender, _In_ LampGroupLampGroupsCreatedReceivedEventArgs^ args);
    void CallLampGroupsUpdatedReceived(_In_ LampGroupLegacySignals^ sender, _In_ LampGroupLampGroupsUpdatedReceivedEventArgs^ args);
    void CallLampGroupsDeletedReceived(_In_ LampGroupLegacySignals^ sender, _In_ LampGroupLampGroupsDeletedReceivedEventArgs^ args);

private:
    alljoyn_busobject m_busObject;
    alljoyn_sessionid m_sessionId;

    virtual event Windows::Foundation::EventHandler<Platform::Object^>^ _LampGroupsNameChangedReceived;
    virtual event Windows::Foundation::EventHandler<Platform::Object^>^ _LampGroupsCreatedReceived;
    virtual event Windows::Foundation::EventHandler<Platform::Object^>^ _LampGroupsUpdatedReceived;
    virtual event Windows::Foundation::EventHandler<Platform::Object^>^ _LampGroupsDeletedReceived;

    alljoyn_interfacedescription_member m_memberLampGroupsNameChanged;
    alljoyn_interfacedescription_member m_memberLampGroupsCreated;
    alljoyn_interfacedescription_member m_memberLampGroupsUpdated;
    alljoyn_interfacedescription_member m_memberLampGroupsDeleted;
};

} } } } } 