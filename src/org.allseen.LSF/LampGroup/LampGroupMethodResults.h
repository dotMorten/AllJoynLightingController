//-----------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated.
//
//   For more information, see: http://go.microsoft.com/fwlink/?LinkID=623246
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

using namespace concurrency;

namespace org { namespace allseen { namespace LSF { namespace ControllerService { namespace LampGroup {

ref class LampGroupConsumer;

public ref class LampGroupGetAllLampGroupIDsResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 ResponseCode
    {
        uint32 get() { return m_interfaceMemberResponseCode; }
    internal:
        void set(_In_ uint32 value) { m_interfaceMemberResponseCode = value; }
    }
    property Windows::Foundation::Collections::IVector<Platform::String^>^ LampGroupIDs
    {
        Windows::Foundation::Collections::IVector<Platform::String^>^ get() { return m_interfaceMemberLampGroupIDs; }
    internal:
        void set(_In_ Windows::Foundation::Collections::IVector<Platform::String^>^ value) { m_interfaceMemberLampGroupIDs = value; }
    }
    
    static LampGroupGetAllLampGroupIDsResult^ CreateSuccessResult(_In_ uint32 interfaceMemberResponseCode, _In_ Windows::Foundation::Collections::IVector<Platform::String^>^ interfaceMemberLampGroupIDs)
    {
        auto result = ref new LampGroupGetAllLampGroupIDsResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->ResponseCode = interfaceMemberResponseCode;
        result->LampGroupIDs = interfaceMemberLampGroupIDs;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LampGroupGetAllLampGroupIDsResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LampGroupGetAllLampGroupIDsResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    uint32 m_interfaceMemberResponseCode;
    Windows::Foundation::Collections::IVector<Platform::String^>^ m_interfaceMemberLampGroupIDs;
};

public ref class LampGroupGetLampGroupNameResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 ResponseCode
    {
        uint32 get() { return m_interfaceMemberResponseCode; }
    internal:
        void set(_In_ uint32 value) { m_interfaceMemberResponseCode = value; }
    }
    property Platform::String^ LampGroupID
    {
        Platform::String^ get() { return m_interfaceMemberLampGroupID; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLampGroupID = value; }
    }
    property Platform::String^ Language
    {
        Platform::String^ get() { return m_interfaceMemberLanguage; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLanguage = value; }
    }
    property Platform::String^ LampGroupName
    {
        Platform::String^ get() { return m_interfaceMemberLampGroupName; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLampGroupName = value; }
    }
    
    static LampGroupGetLampGroupNameResult^ CreateSuccessResult(_In_ uint32 interfaceMemberResponseCode, _In_ Platform::String^ interfaceMemberLampGroupID, _In_ Platform::String^ interfaceMemberLanguage, _In_ Platform::String^ interfaceMemberLampGroupName)
    {
        auto result = ref new LampGroupGetLampGroupNameResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->ResponseCode = interfaceMemberResponseCode;
        result->LampGroupID = interfaceMemberLampGroupID;
        result->Language = interfaceMemberLanguage;
        result->LampGroupName = interfaceMemberLampGroupName;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LampGroupGetLampGroupNameResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LampGroupGetLampGroupNameResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    uint32 m_interfaceMemberResponseCode;
    Platform::String^ m_interfaceMemberLampGroupID;
    Platform::String^ m_interfaceMemberLanguage;
    Platform::String^ m_interfaceMemberLampGroupName;
};

public ref class LampGroupSetLampGroupNameResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 ResponseCode
    {
        uint32 get() { return m_interfaceMemberResponseCode; }
    internal:
        void set(_In_ uint32 value) { m_interfaceMemberResponseCode = value; }
    }
    property Platform::String^ LampGroupID
    {
        Platform::String^ get() { return m_interfaceMemberLampGroupID; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLampGroupID = value; }
    }
    property Platform::String^ Language
    {
        Platform::String^ get() { return m_interfaceMemberLanguage; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLanguage = value; }
    }
    
    static LampGroupSetLampGroupNameResult^ CreateSuccessResult(_In_ uint32 interfaceMemberResponseCode, _In_ Platform::String^ interfaceMemberLampGroupID, _In_ Platform::String^ interfaceMemberLanguage)
    {
        auto result = ref new LampGroupSetLampGroupNameResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->ResponseCode = interfaceMemberResponseCode;
        result->LampGroupID = interfaceMemberLampGroupID;
        result->Language = interfaceMemberLanguage;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LampGroupSetLampGroupNameResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LampGroupSetLampGroupNameResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    uint32 m_interfaceMemberResponseCode;
    Platform::String^ m_interfaceMemberLampGroupID;
    Platform::String^ m_interfaceMemberLanguage;
};

public ref class LampGroupCreateLampGroupResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 ResponseCode
    {
        uint32 get() { return m_interfaceMemberResponseCode; }
    internal:
        void set(_In_ uint32 value) { m_interfaceMemberResponseCode = value; }
    }
    property Platform::String^ LampGroupID
    {
        Platform::String^ get() { return m_interfaceMemberLampGroupID; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLampGroupID = value; }
    }
    
    static LampGroupCreateLampGroupResult^ CreateSuccessResult(_In_ uint32 interfaceMemberResponseCode, _In_ Platform::String^ interfaceMemberLampGroupID)
    {
        auto result = ref new LampGroupCreateLampGroupResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->ResponseCode = interfaceMemberResponseCode;
        result->LampGroupID = interfaceMemberLampGroupID;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LampGroupCreateLampGroupResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LampGroupCreateLampGroupResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    uint32 m_interfaceMemberResponseCode;
    Platform::String^ m_interfaceMemberLampGroupID;
};

public ref class LampGroupUpdateLampGroupResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 ResponseCode
    {
        uint32 get() { return m_interfaceMemberResponseCode; }
    internal:
        void set(_In_ uint32 value) { m_interfaceMemberResponseCode = value; }
    }
    property Platform::String^ LampGroupID
    {
        Platform::String^ get() { return m_interfaceMemberLampGroupID; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLampGroupID = value; }
    }
    
    static LampGroupUpdateLampGroupResult^ CreateSuccessResult(_In_ uint32 interfaceMemberResponseCode, _In_ Platform::String^ interfaceMemberLampGroupID)
    {
        auto result = ref new LampGroupUpdateLampGroupResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->ResponseCode = interfaceMemberResponseCode;
        result->LampGroupID = interfaceMemberLampGroupID;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LampGroupUpdateLampGroupResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LampGroupUpdateLampGroupResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    uint32 m_interfaceMemberResponseCode;
    Platform::String^ m_interfaceMemberLampGroupID;
};

public ref class LampGroupDeleteLampGroupResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 ResponseCode
    {
        uint32 get() { return m_interfaceMemberResponseCode; }
    internal:
        void set(_In_ uint32 value) { m_interfaceMemberResponseCode = value; }
    }
    property Platform::String^ LampGroupID
    {
        Platform::String^ get() { return m_interfaceMemberLampGroupID; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLampGroupID = value; }
    }
    
    static LampGroupDeleteLampGroupResult^ CreateSuccessResult(_In_ uint32 interfaceMemberResponseCode, _In_ Platform::String^ interfaceMemberLampGroupID)
    {
        auto result = ref new LampGroupDeleteLampGroupResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->ResponseCode = interfaceMemberResponseCode;
        result->LampGroupID = interfaceMemberLampGroupID;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LampGroupDeleteLampGroupResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LampGroupDeleteLampGroupResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    uint32 m_interfaceMemberResponseCode;
    Platform::String^ m_interfaceMemberLampGroupID;
};

public ref class LampGroupGetLampGroupResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 ResponseCode
    {
        uint32 get() { return m_interfaceMemberResponseCode; }
    internal:
        void set(_In_ uint32 value) { m_interfaceMemberResponseCode = value; }
    }
    property Platform::String^ LampGroupID
    {
        Platform::String^ get() { return m_interfaceMemberLampGroupID; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLampGroupID = value; }
    }
    property Windows::Foundation::Collections::IVector<Platform::String^>^ LampIDs
    {
        Windows::Foundation::Collections::IVector<Platform::String^>^ get() { return m_interfaceMemberLampIDs; }
    internal:
        void set(_In_ Windows::Foundation::Collections::IVector<Platform::String^>^ value) { m_interfaceMemberLampIDs = value; }
    }
    property Windows::Foundation::Collections::IVector<Platform::String^>^ LampGroupIDs
    {
        Windows::Foundation::Collections::IVector<Platform::String^>^ get() { return m_interfaceMemberLampGroupIDs; }
    internal:
        void set(_In_ Windows::Foundation::Collections::IVector<Platform::String^>^ value) { m_interfaceMemberLampGroupIDs = value; }
    }
    
    static LampGroupGetLampGroupResult^ CreateSuccessResult(_In_ uint32 interfaceMemberResponseCode, _In_ Platform::String^ interfaceMemberLampGroupID, _In_ Windows::Foundation::Collections::IVector<Platform::String^>^ interfaceMemberLampIDs, _In_ Windows::Foundation::Collections::IVector<Platform::String^>^ interfaceMemberLampGroupIDs)
    {
        auto result = ref new LampGroupGetLampGroupResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->ResponseCode = interfaceMemberResponseCode;
        result->LampGroupID = interfaceMemberLampGroupID;
        result->LampIDs = interfaceMemberLampIDs;
        result->LampGroupIDs = interfaceMemberLampGroupIDs;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LampGroupGetLampGroupResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LampGroupGetLampGroupResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    uint32 m_interfaceMemberResponseCode;
    Platform::String^ m_interfaceMemberLampGroupID;
    Windows::Foundation::Collections::IVector<Platform::String^>^ m_interfaceMemberLampIDs;
    Windows::Foundation::Collections::IVector<Platform::String^>^ m_interfaceMemberLampGroupIDs;
};

public ref class LampGroupTransitionLampGroupStateResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 ResponseCode
    {
        uint32 get() { return m_interfaceMemberResponseCode; }
    internal:
        void set(_In_ uint32 value) { m_interfaceMemberResponseCode = value; }
    }
    property Platform::String^ LampGroupID
    {
        Platform::String^ get() { return m_interfaceMemberLampGroupID; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLampGroupID = value; }
    }
    
    static LampGroupTransitionLampGroupStateResult^ CreateSuccessResult(_In_ uint32 interfaceMemberResponseCode, _In_ Platform::String^ interfaceMemberLampGroupID)
    {
        auto result = ref new LampGroupTransitionLampGroupStateResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->ResponseCode = interfaceMemberResponseCode;
        result->LampGroupID = interfaceMemberLampGroupID;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LampGroupTransitionLampGroupStateResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LampGroupTransitionLampGroupStateResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    uint32 m_interfaceMemberResponseCode;
    Platform::String^ m_interfaceMemberLampGroupID;
};

public ref class LampGroupPulseLampGroupWithStateResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 ResponseCode
    {
        uint32 get() { return m_interfaceMemberResponseCode; }
    internal:
        void set(_In_ uint32 value) { m_interfaceMemberResponseCode = value; }
    }
    property Platform::String^ LampGroupID
    {
        Platform::String^ get() { return m_interfaceMemberLampGroupID; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLampGroupID = value; }
    }
    
    static LampGroupPulseLampGroupWithStateResult^ CreateSuccessResult(_In_ uint32 interfaceMemberResponseCode, _In_ Platform::String^ interfaceMemberLampGroupID)
    {
        auto result = ref new LampGroupPulseLampGroupWithStateResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->ResponseCode = interfaceMemberResponseCode;
        result->LampGroupID = interfaceMemberLampGroupID;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LampGroupPulseLampGroupWithStateResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LampGroupPulseLampGroupWithStateResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    uint32 m_interfaceMemberResponseCode;
    Platform::String^ m_interfaceMemberLampGroupID;
};

public ref class LampGroupPulseLampGroupWithPresetResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 ResponseCode
    {
        uint32 get() { return m_interfaceMemberResponseCode; }
    internal:
        void set(_In_ uint32 value) { m_interfaceMemberResponseCode = value; }
    }
    property Platform::String^ LampGroupID
    {
        Platform::String^ get() { return m_interfaceMemberLampGroupID; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLampGroupID = value; }
    }
    
    static LampGroupPulseLampGroupWithPresetResult^ CreateSuccessResult(_In_ uint32 interfaceMemberResponseCode, _In_ Platform::String^ interfaceMemberLampGroupID)
    {
        auto result = ref new LampGroupPulseLampGroupWithPresetResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->ResponseCode = interfaceMemberResponseCode;
        result->LampGroupID = interfaceMemberLampGroupID;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LampGroupPulseLampGroupWithPresetResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LampGroupPulseLampGroupWithPresetResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    uint32 m_interfaceMemberResponseCode;
    Platform::String^ m_interfaceMemberLampGroupID;
};

public ref class LampGroupTransitionLampGroupStateToPresetResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 ResponseCode
    {
        uint32 get() { return m_interfaceMemberResponseCode; }
    internal:
        void set(_In_ uint32 value) { m_interfaceMemberResponseCode = value; }
    }
    property Platform::String^ LampGroupID
    {
        Platform::String^ get() { return m_interfaceMemberLampGroupID; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLampGroupID = value; }
    }
    
    static LampGroupTransitionLampGroupStateToPresetResult^ CreateSuccessResult(_In_ uint32 interfaceMemberResponseCode, _In_ Platform::String^ interfaceMemberLampGroupID)
    {
        auto result = ref new LampGroupTransitionLampGroupStateToPresetResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->ResponseCode = interfaceMemberResponseCode;
        result->LampGroupID = interfaceMemberLampGroupID;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LampGroupTransitionLampGroupStateToPresetResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LampGroupTransitionLampGroupStateToPresetResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    uint32 m_interfaceMemberResponseCode;
    Platform::String^ m_interfaceMemberLampGroupID;
};

public ref class LampGroupTransitionLampGroupStateFieldResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 ResponseCode
    {
        uint32 get() { return m_interfaceMemberResponseCode; }
    internal:
        void set(_In_ uint32 value) { m_interfaceMemberResponseCode = value; }
    }
    property Platform::String^ LampGroupID
    {
        Platform::String^ get() { return m_interfaceMemberLampGroupID; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLampGroupID = value; }
    }
    property Platform::String^ LampGroupStateFieldName
    {
        Platform::String^ get() { return m_interfaceMemberLampGroupStateFieldName; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLampGroupStateFieldName = value; }
    }
    
    static LampGroupTransitionLampGroupStateFieldResult^ CreateSuccessResult(_In_ uint32 interfaceMemberResponseCode, _In_ Platform::String^ interfaceMemberLampGroupID, _In_ Platform::String^ interfaceMemberLampGroupStateFieldName)
    {
        auto result = ref new LampGroupTransitionLampGroupStateFieldResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->ResponseCode = interfaceMemberResponseCode;
        result->LampGroupID = interfaceMemberLampGroupID;
        result->LampGroupStateFieldName = interfaceMemberLampGroupStateFieldName;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LampGroupTransitionLampGroupStateFieldResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LampGroupTransitionLampGroupStateFieldResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    uint32 m_interfaceMemberResponseCode;
    Platform::String^ m_interfaceMemberLampGroupID;
    Platform::String^ m_interfaceMemberLampGroupStateFieldName;
};

public ref class LampGroupResetLampGroupStateResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 ResponseCode
    {
        uint32 get() { return m_interfaceMemberResponseCode; }
    internal:
        void set(_In_ uint32 value) { m_interfaceMemberResponseCode = value; }
    }
    property Platform::String^ LampGroupID
    {
        Platform::String^ get() { return m_interfaceMemberLampGroupID; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLampGroupID = value; }
    }
    
    static LampGroupResetLampGroupStateResult^ CreateSuccessResult(_In_ uint32 interfaceMemberResponseCode, _In_ Platform::String^ interfaceMemberLampGroupID)
    {
        auto result = ref new LampGroupResetLampGroupStateResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->ResponseCode = interfaceMemberResponseCode;
        result->LampGroupID = interfaceMemberLampGroupID;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LampGroupResetLampGroupStateResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LampGroupResetLampGroupStateResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    uint32 m_interfaceMemberResponseCode;
    Platform::String^ m_interfaceMemberLampGroupID;
};

public ref class LampGroupResetLampGroupStateFieldResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 ResponseCode
    {
        uint32 get() { return m_interfaceMemberResponseCode; }
    internal:
        void set(_In_ uint32 value) { m_interfaceMemberResponseCode = value; }
    }
    property Platform::String^ LampGroupID
    {
        Platform::String^ get() { return m_interfaceMemberLampGroupID; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLampGroupID = value; }
    }
    property Platform::String^ LampGroupStateFieldName
    {
        Platform::String^ get() { return m_interfaceMemberLampGroupStateFieldName; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberLampGroupStateFieldName = value; }
    }
    
    static LampGroupResetLampGroupStateFieldResult^ CreateSuccessResult(_In_ uint32 interfaceMemberResponseCode, _In_ Platform::String^ interfaceMemberLampGroupID, _In_ Platform::String^ interfaceMemberLampGroupStateFieldName)
    {
        auto result = ref new LampGroupResetLampGroupStateFieldResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->ResponseCode = interfaceMemberResponseCode;
        result->LampGroupID = interfaceMemberLampGroupID;
        result->LampGroupStateFieldName = interfaceMemberLampGroupStateFieldName;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LampGroupResetLampGroupStateFieldResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LampGroupResetLampGroupStateFieldResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    uint32 m_interfaceMemberResponseCode;
    Platform::String^ m_interfaceMemberLampGroupID;
    Platform::String^ m_interfaceMemberLampGroupStateFieldName;
};

public ref class LampGroupJoinSessionResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property LampGroupConsumer^ Consumer
    {
        LampGroupConsumer^ get() { return m_consumer; }
    internal:
        void set(_In_ LampGroupConsumer^ value) { m_consumer = value; }
    };

private:
    int32 m_status;
    LampGroupConsumer^ m_consumer;
};

public ref class LampGroupGetVersionResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 Version
    {
        uint32 get() { return m_value; }
    internal:
        void set(_In_ uint32 value) { m_value = value; }
    }

    static LampGroupGetVersionResult^ CreateSuccessResult(_In_ uint32 value)
    {
        auto result = ref new LampGroupGetVersionResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->Version = value;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }

    static LampGroupGetVersionResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LampGroupGetVersionResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    uint32 m_value;
};

} } } } } 
