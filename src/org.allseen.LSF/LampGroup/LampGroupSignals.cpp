//-----------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated.
//
//   For more information, see: http://go.microsoft.com/fwlink/?LinkID=623246
// </auto-generated>
//-----------------------------------------------------------------------------
#include "pch.h"

using namespace Microsoft::WRL;
using namespace Platform;
using namespace Windows::Devices::AllJoyn;
using namespace Windows::Foundation;
using namespace org::allseen::LSF::ControllerService::LampGroup;

void LampGroupSignals::Initialize(_In_ org::allseen::LSF::ISignalEmitter^ emitter)
{
    m_emitter = emitter;
    alljoyn_busattachment nativeBusAttachment = AllJoynHelpers::GetInternalBusAttachment(m_emitter->BusObject->BusAttachment);
    auto interfaceDefinition = alljoyn_busattachment_getinterface(nativeBusAttachment, "org.allseen.LSF.ControllerService.LampGroup");
    alljoyn_interfacedescription_getmember(interfaceDefinition, "LampGroupsNameChanged", &m_memberLampGroupsNameChanged);
    alljoyn_interfacedescription_getmember(interfaceDefinition, "LampGroupsCreated", &m_memberLampGroupsCreated);
    alljoyn_interfacedescription_getmember(interfaceDefinition, "LampGroupsUpdated", &m_memberLampGroupsUpdated);
    alljoyn_interfacedescription_getmember(interfaceDefinition, "LampGroupsDeleted", &m_memberLampGroupsDeleted);
}

void LampGroupSignals::LampGroupsNameChanged(_In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberLampGroupsIDs)
{
    if (nullptr == AllJoynHelpers::GetInternalBusObject(m_emitter->BusObject))
    {
        return;
    }

    size_t argCount = 1;
    alljoyn_msgarg arguments = alljoyn_msgarg_array_create(argCount);
    (void)TypeConversionHelpers::SetAllJoynMessageArg(alljoyn_msgarg_array_element(arguments, 0), "as", interfaceMemberLampGroupsIDs);
    
    alljoyn_busobject_signal(
        AllJoynHelpers::GetInternalBusObject(m_emitter->BusObject), 
        NULL,  // Generated code only supports broadcast signals.
        m_emitter->Session->Id,
        m_memberLampGroupsNameChanged,
        arguments,
        argCount, 
        0, // A signal with a TTL of 0 will be sent to every member of the session, regardless of how long it takes to deliver the message
        ALLJOYN_MESSAGE_FLAG_GLOBAL_BROADCAST, // Broadcast to everyone in the session.
        NULL); // The generated code does not need the generated signal message

    alljoyn_msgarg_destroy(arguments);
}

void LampGroupSignals::CallLampGroupsNameChangedReceived(_In_ LampGroupSignals^ sender, _In_ LampGroupLampGroupsNameChangedReceivedEventArgs^ args)
{
    LampGroupsNameChangedReceived(sender, args);
}

void LampGroupSignals::LampGroupsCreated(_In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberLampGroupsIDs)
{
    if (nullptr == AllJoynHelpers::GetInternalBusObject(m_emitter->BusObject))
    {
        return;
    }

    size_t argCount = 1;
    alljoyn_msgarg arguments = alljoyn_msgarg_array_create(argCount);
    (void)TypeConversionHelpers::SetAllJoynMessageArg(alljoyn_msgarg_array_element(arguments, 0), "as", interfaceMemberLampGroupsIDs);
    
    alljoyn_busobject_signal(
        AllJoynHelpers::GetInternalBusObject(m_emitter->BusObject), 
        NULL,  // Generated code only supports broadcast signals.
        m_emitter->Session->Id,
        m_memberLampGroupsCreated,
        arguments,
        argCount, 
        0, // A signal with a TTL of 0 will be sent to every member of the session, regardless of how long it takes to deliver the message
        ALLJOYN_MESSAGE_FLAG_GLOBAL_BROADCAST, // Broadcast to everyone in the session.
        NULL); // The generated code does not need the generated signal message

    alljoyn_msgarg_destroy(arguments);
}

void LampGroupSignals::CallLampGroupsCreatedReceived(_In_ LampGroupSignals^ sender, _In_ LampGroupLampGroupsCreatedReceivedEventArgs^ args)
{
    LampGroupsCreatedReceived(sender, args);
}

void LampGroupSignals::LampGroupsUpdated(_In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberLampGroupsIDs)
{
    if (nullptr == AllJoynHelpers::GetInternalBusObject(m_emitter->BusObject))
    {
        return;
    }

    size_t argCount = 1;
    alljoyn_msgarg arguments = alljoyn_msgarg_array_create(argCount);
    (void)TypeConversionHelpers::SetAllJoynMessageArg(alljoyn_msgarg_array_element(arguments, 0), "as", interfaceMemberLampGroupsIDs);
    
    alljoyn_busobject_signal(
        AllJoynHelpers::GetInternalBusObject(m_emitter->BusObject), 
        NULL,  // Generated code only supports broadcast signals.
        m_emitter->Session->Id,
        m_memberLampGroupsUpdated,
        arguments,
        argCount, 
        0, // A signal with a TTL of 0 will be sent to every member of the session, regardless of how long it takes to deliver the message
        ALLJOYN_MESSAGE_FLAG_GLOBAL_BROADCAST, // Broadcast to everyone in the session.
        NULL); // The generated code does not need the generated signal message

    alljoyn_msgarg_destroy(arguments);
}

void LampGroupSignals::CallLampGroupsUpdatedReceived(_In_ LampGroupSignals^ sender, _In_ LampGroupLampGroupsUpdatedReceivedEventArgs^ args)
{
    LampGroupsUpdatedReceived(sender, args);
}

void LampGroupSignals::LampGroupsDeleted(_In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberLampGroupsIDs)
{
    if (nullptr == AllJoynHelpers::GetInternalBusObject(m_emitter->BusObject))
    {
        return;
    }

    size_t argCount = 1;
    alljoyn_msgarg arguments = alljoyn_msgarg_array_create(argCount);
    (void)TypeConversionHelpers::SetAllJoynMessageArg(alljoyn_msgarg_array_element(arguments, 0), "as", interfaceMemberLampGroupsIDs);
    
    alljoyn_busobject_signal(
        AllJoynHelpers::GetInternalBusObject(m_emitter->BusObject), 
        NULL,  // Generated code only supports broadcast signals.
        m_emitter->Session->Id,
        m_memberLampGroupsDeleted,
        arguments,
        argCount, 
        0, // A signal with a TTL of 0 will be sent to every member of the session, regardless of how long it takes to deliver the message
        ALLJOYN_MESSAGE_FLAG_GLOBAL_BROADCAST, // Broadcast to everyone in the session.
        NULL); // The generated code does not need the generated signal message

    alljoyn_msgarg_destroy(arguments);
}

void LampGroupSignals::CallLampGroupsDeletedReceived(_In_ LampGroupSignals^ sender, _In_ LampGroupLampGroupsDeletedReceivedEventArgs^ args)
{
    LampGroupsDeletedReceived(sender, args);
}

