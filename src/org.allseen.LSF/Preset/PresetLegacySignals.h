//-----------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated.
//
//   For more information, see: http://go.microsoft.com/fwlink/?LinkID=623246
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace org { namespace allseen { namespace LSF { namespace ControllerService { namespace Preset {

ref class PresetLegacySignals;

public interface class IPresetLegacySignals
{
    event Windows::Foundation::TypedEventHandler<PresetLegacySignals^, PresetDefaultLampStateChangedReceivedEventArgs^>^ DefaultLampStateChangedReceived;
    event Windows::Foundation::TypedEventHandler<PresetLegacySignals^, PresetPresetsNameChangedReceivedEventArgs^>^ PresetsNameChangedReceived;
    event Windows::Foundation::TypedEventHandler<PresetLegacySignals^, PresetPresetsCreatedReceivedEventArgs^>^ PresetsCreatedReceived;
    event Windows::Foundation::TypedEventHandler<PresetLegacySignals^, PresetPresetsUpdatedReceivedEventArgs^>^ PresetsUpdatedReceived;
    event Windows::Foundation::TypedEventHandler<PresetLegacySignals^, PresetPresetsDeletedReceivedEventArgs^>^ PresetsDeletedReceived;
};

public ref class PresetLegacySignals sealed : [Windows::Foundation::Metadata::Default] IPresetLegacySignals
{
public:
    // Calling this method will send the DefaultLampStateChanged signal to every member of the session.
    void DefaultLampStateChanged();

    // This event fires whenever the DefaultLampStateChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<PresetLegacySignals^, PresetDefaultLampStateChangedReceivedEventArgs^>^ DefaultLampStateChangedReceived 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<PresetLegacySignals^, PresetDefaultLampStateChangedReceivedEventArgs^>^ handler) 
        { 
            return _DefaultLampStateChangedReceived += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<PresetLegacySignals^>(sender), safe_cast<PresetDefaultLampStateChangedReceivedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _DefaultLampStateChangedReceived -= token; 
        } 
    internal: 
        void raise(PresetLegacySignals^ sender, PresetDefaultLampStateChangedReceivedEventArgs^ args) 
        { 
            _DefaultLampStateChangedReceived(sender, args);
        } 
    }

    // Calling this method will send the PresetsNameChanged signal to every member of the session.
    void PresetsNameChanged(_In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberPresetIDs);

    // This event fires whenever the PresetsNameChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<PresetLegacySignals^, PresetPresetsNameChangedReceivedEventArgs^>^ PresetsNameChangedReceived 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<PresetLegacySignals^, PresetPresetsNameChangedReceivedEventArgs^>^ handler) 
        { 
            return _PresetsNameChangedReceived += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<PresetLegacySignals^>(sender), safe_cast<PresetPresetsNameChangedReceivedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _PresetsNameChangedReceived -= token; 
        } 
    internal: 
        void raise(PresetLegacySignals^ sender, PresetPresetsNameChangedReceivedEventArgs^ args) 
        { 
            _PresetsNameChangedReceived(sender, args);
        } 
    }

    // Calling this method will send the PresetsCreated signal to every member of the session.
    void PresetsCreated(_In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberPresetsIDs);

    // This event fires whenever the PresetsCreated signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<PresetLegacySignals^, PresetPresetsCreatedReceivedEventArgs^>^ PresetsCreatedReceived 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<PresetLegacySignals^, PresetPresetsCreatedReceivedEventArgs^>^ handler) 
        { 
            return _PresetsCreatedReceived += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<PresetLegacySignals^>(sender), safe_cast<PresetPresetsCreatedReceivedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _PresetsCreatedReceived -= token; 
        } 
    internal: 
        void raise(PresetLegacySignals^ sender, PresetPresetsCreatedReceivedEventArgs^ args) 
        { 
            _PresetsCreatedReceived(sender, args);
        } 
    }

    // Calling this method will send the PresetsUpdated signal to every member of the session.
    void PresetsUpdated(_In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberPresetsIDs);

    // This event fires whenever the PresetsUpdated signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<PresetLegacySignals^, PresetPresetsUpdatedReceivedEventArgs^>^ PresetsUpdatedReceived 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<PresetLegacySignals^, PresetPresetsUpdatedReceivedEventArgs^>^ handler) 
        { 
            return _PresetsUpdatedReceived += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<PresetLegacySignals^>(sender), safe_cast<PresetPresetsUpdatedReceivedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _PresetsUpdatedReceived -= token; 
        } 
    internal: 
        void raise(PresetLegacySignals^ sender, PresetPresetsUpdatedReceivedEventArgs^ args) 
        { 
            _PresetsUpdatedReceived(sender, args);
        } 
    }

    // Calling this method will send the PresetsDeleted signal to every member of the session.
    void PresetsDeleted(_In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberPresetsIDs);

    // This event fires whenever the PresetsDeleted signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<PresetLegacySignals^, PresetPresetsDeletedReceivedEventArgs^>^ PresetsDeletedReceived 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<PresetLegacySignals^, PresetPresetsDeletedReceivedEventArgs^>^ handler) 
        { 
            return _PresetsDeletedReceived += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<PresetLegacySignals^>(sender), safe_cast<PresetPresetsDeletedReceivedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _PresetsDeletedReceived -= token; 
        } 
    internal: 
        void raise(PresetLegacySignals^ sender, PresetPresetsDeletedReceivedEventArgs^ args) 
        { 
            _PresetsDeletedReceived(sender, args);
        } 
    }

internal:
    void Initialize(_In_ alljoyn_busobject busObject, _In_ alljoyn_sessionid sessionId);
    void CallDefaultLampStateChangedReceived(_In_ PresetLegacySignals^ sender, _In_ PresetDefaultLampStateChangedReceivedEventArgs^ args);
    void CallPresetsNameChangedReceived(_In_ PresetLegacySignals^ sender, _In_ PresetPresetsNameChangedReceivedEventArgs^ args);
    void CallPresetsCreatedReceived(_In_ PresetLegacySignals^ sender, _In_ PresetPresetsCreatedReceivedEventArgs^ args);
    void CallPresetsUpdatedReceived(_In_ PresetLegacySignals^ sender, _In_ PresetPresetsUpdatedReceivedEventArgs^ args);
    void CallPresetsDeletedReceived(_In_ PresetLegacySignals^ sender, _In_ PresetPresetsDeletedReceivedEventArgs^ args);

private:
    alljoyn_busobject m_busObject;
    alljoyn_sessionid m_sessionId;

    virtual event Windows::Foundation::EventHandler<Platform::Object^>^ _DefaultLampStateChangedReceived;
    virtual event Windows::Foundation::EventHandler<Platform::Object^>^ _PresetsNameChangedReceived;
    virtual event Windows::Foundation::EventHandler<Platform::Object^>^ _PresetsCreatedReceived;
    virtual event Windows::Foundation::EventHandler<Platform::Object^>^ _PresetsUpdatedReceived;
    virtual event Windows::Foundation::EventHandler<Platform::Object^>^ _PresetsDeletedReceived;

    alljoyn_interfacedescription_member m_memberDefaultLampStateChanged;
    alljoyn_interfacedescription_member m_memberPresetsNameChanged;
    alljoyn_interfacedescription_member m_memberPresetsCreated;
    alljoyn_interfacedescription_member m_memberPresetsUpdated;
    alljoyn_interfacedescription_member m_memberPresetsDeleted;
};

} } } } } 